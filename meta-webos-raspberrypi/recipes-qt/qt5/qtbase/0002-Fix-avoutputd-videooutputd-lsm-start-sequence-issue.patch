From 43089c0d2ddd18b2ea3723355a0832644ee789ce Mon Sep 17 00:00:00 2001
From: Jaehoon Lee <jaehoon85.lee@lge.com>
Date: Wed, 24 Apr 2019 10:58:19 +0000
Subject: [PATCH] Fix avoutputd/videooutputd, lsm start sequence issue

:Release Notes:
Fixed issue regarding unable to launch webapps
if avoutputd/videooutputd started before
surface manager.

:Detailed Notes:
This fix calls drmSetMaster to acquire drm master
status so it can authenticate legacy wayland clients
which rely on magic token exchange
between client and server for gpu access.

:Testing Performed:
Tested that apps were launched after changing the
startup sequence.

:QA Notes:

:Issues Addressed:
[PLAT-45032] Investigate app launching issue when
             avoutputd is started before surface manager

Change-Id: I6c7a2ea222e6d2415f9115f58fb2282285af1c96
Upstream-Status: Inappropriate [webOS specific]
---
 src/platformsupport/kmsconvenience/qkmsdevice.cpp        | 9 +++++++++
 src/platformsupport/kmsconvenience/qkmsdevice_p.h        | 1 +
 .../eglfs_kms_support/qeglfskmsintegration.cpp           | 2 ++
 3 files changed, 12 insertions(+)

diff --git a/src/platformsupport/kmsconvenience/qkmsdevice.cpp b/src/platformsupport/kmsconvenience/qkmsdevice.cpp
index 5e6ef1cba9..1f01578fea 100644
--- a/src/platformsupport/kmsconvenience/qkmsdevice.cpp
+++ b/src/platformsupport/kmsconvenience/qkmsdevice.cpp
@@ -871,6 +871,15 @@ void QKmsDevice::discoverPlanes()
     drmModeFreePlaneResources(planeResources);
 }
 
+bool QKmsDevice::setMaster()
+{
+    if (drmSetMaster(m_dri_fd))
+    {
+        qWarning("Failed to set drmSetMaster");
+    }
+    return true;
+}
+
 int QKmsDevice::fd() const
 {
     return m_dri_fd;
diff --git a/src/platformsupport/kmsconvenience/qkmsdevice_p.h b/src/platformsupport/kmsconvenience/qkmsdevice_p.h
index 95f745350c..2d24dd067b 100644
--- a/src/platformsupport/kmsconvenience/qkmsdevice_p.h
+++ b/src/platformsupport/kmsconvenience/qkmsdevice_p.h
@@ -248,6 +248,7 @@ public:
     void createScreens();
 
     int fd() const;
+    bool setMaster();
     QString devicePath() const;
 
     QKmsScreenConfig *screenConfig() const;
diff --git a/src/plugins/platforms/eglfs/deviceintegration/eglfs_kms_support/qeglfskmsintegration.cpp b/src/plugins/platforms/eglfs/deviceintegration/eglfs_kms_support/qeglfskmsintegration.cpp
index b2a13504d5..a1241c1571 100644
--- a/src/plugins/platforms/eglfs/deviceintegration/eglfs_kms_support/qeglfskmsintegration.cpp
+++ b/src/plugins/platforms/eglfs/deviceintegration/eglfs_kms_support/qeglfskmsintegration.cpp
@@ -76,6 +76,8 @@ void QEglFSKmsIntegration::platformInit()
     m_device = createDevice();
     if (Q_UNLIKELY(!m_device->open()))
         qFatal("Could not open DRM device");
+    if (Q_UNLIKELY(!m_device->setMaster()))
+        qFatal("Could not set DRM device as master");      
 }
 
 void QEglFSKmsIntegration::platformDestroy()
