From 51498e4a45856118c68390b001f8987659cc7508 Mon Sep 17 00:00:00 2001
From: Martin Jansa <martin2.jansa@lgepartner.com>
Date: Tue, 17 Jan 2023 17:21:59 +0000
Subject: [PATCH] input_simulator: fix build with 64-bit time_t

:Release Notes:
Use input_event_sec/input_event_usec to access sec and usec
from input_event.

:Detailed Notes:
input_event is defined like this:
  /*
   * The event structure itself
   * Note that __USE_TIME_BITS64 is defined by libc based on
   * application's request to use 64 bit time_t.
   */

  struct input_event {
  #if (__BITS_PER_LONG != 32 || !defined(__USE_TIME_BITS64)) && !defined(__KERNEL__)
          struct timeval time;
  #define input_event_sec time.tv_sec
  #define input_event_usec time.tv_usec
  #else
          __kernel_ulong_t __sec;
  #if defined(__sparc__) && defined(__arch64__)
          unsigned int __usec;
          unsigned int __pad;
  #else
          __kernel_ulong_t __usec;
  #endif
  #define input_event_sec  __sec
  #define input_event_usec __usec
  #endif
          __u16 type;
          __u16 code;
          __s32 value;
  };

using the macros allows to support __USE_TIME_BITS64 with backwards
compatibility.

Fixes:
http://gecko.lge.com/Errors/Details/521045

build with time64.inc as in:
https://git.openembedded.org/openembedded-core/tree/meta/conf/distro/include/time64.inc?id=18df5694796bcfee73c3765bc991bcef055466e3

webos-fluentbit-plugins/1.0.0-38-r12/recipe-sysroot-native/usr/bin/arm-distromllib32-linux-gnueabi/arm-distromllib32-linux-gnueabi-g++  -Iwebos-fluentbit-plugins/1.0.0-38-r12/git/input_simulator -mthumb -mfpu=neon -mfloat-abi=softfp -mcpu=cortex-a9 -mtune=cortex-a9 -funwind-tables -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security -Werror=return-type -D_TIME_BITS=64 -D_FILE_OFFSET_BITS=64  --sysroot=webos-fluentbit-plugins/1.0.0-38-r12/lib32-recipe-sysroot  -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=webos-fluentbit-plugins/1.0.0-38-r12/git=/usr/src/debug/lib32-webos-fluentbit-plugins/1.0.0-38-r12  -fdebug-prefix-map=webos-fluentbit-plugins/1.0.0-38-r12/git=/usr/src/debug/lib32-webos-fluentbit-plugins/1.0.0-38-r12  -fmacro-prefix-map=webos-fluentbit-plugins/1.0.0-38-r12/build=/usr/src/debug/lib32-webos-fluentbit-plugins/1.0.0-38-r12  -fdebug-prefix-map=webos-fluentbit-plugins/1.0.0-38-r12/build=/usr/src/debug/lib32-webos-fluentbit-plugins/1.0.0-38-r12  -fdebug-prefix-map=webos-fluentbit-plugins/1.0.0-38-r12/lib32-recipe-sysroot=  -fmacro-prefix-map=webos-fluentbit-plugins/1.0.0-38-r12/lib32-recipe-sysroot=  -fdebug-prefix-map=webos-fluentbit-plugins/1.0.0-38-r12/recipe-sysroot-native=  -fvisibility-inlines-hidden  -include webos-fluentbit-plugins/1.0.0-38-r12/build/Configured/webospaths.h --std=c++11 -DNDEBUG -MD -MT input_simulator/CMakeFiles/input_simulator.dir/Main.cpp.o -MF input_simulator/CMakeFiles/input_simulator.dir/Main.cpp.o.d -o input_simulator/CMakeFiles/input_simulator.dir/Main.cpp.o -c webos-fluentbit-plugins/1.0.0-38-r12/git/input_simulator/Main.cpp
webos-fluentbit-plugins/1.0.0-38-r12/git/input_simulator/Main.cpp: In function 'void print_input_packet(record_format_payload*)':
webos-fluentbit-plugins/1.0.0-38-r12/git/input_simulator/Main.cpp:575:30: warning: taking address of packed member of 'record_format_payload' may result in an unaligned pointer value [-Waddress-of-packed-member]
  575 |     struct input_event *ie = &rec->ie;
      |                              ^~~~~~~~
webos-fluentbit-plugins/1.0.0-38-r12/git/input_simulator/Main.cpp:581:53: error: 'struct input_event' has no member named 'time'
  581 |     printf("Event: time %ld.%06ld, idev(%d), ", ie->time.tv_sec, ie->time.tv_usec, rec->idev);
      |                                                     ^~~~
webos-fluentbit-plugins/1.0.0-38-r12/git/input_simulator/Main.cpp:581:70: error: 'struct input_event' has no member named 'time'
  581 |     printf("Event: time %ld.%06ld, idev(%d), ", ie->time.tv_sec, ie->time.tv_usec, rec->idev);
      |                                                                      ^~~~
webos-fluentbit-plugins/1.0.0-38-r12/git/input_simulator/Main.cpp: In function 'int playback_mode(const char*)':
webos-fluentbit-plugins/1.0.0-38-r12/git/input_simulator/Main.cpp:915:40: error: 'struct input_event' has no member named 'time'
  915 |     memcpy(&basetime, &currptr->rec.ie.time, sizeof(basetime));
      |                                        ^~~~
In file included from webos-fluentbit-plugins/1.0.0-38-r12/lib32-recipe-sysroot/usr/include/linux/input.h:13,
                 from webos-fluentbit-plugins/1.0.0-38-r12/git/input_simulator/Main.cpp:32:
webos-fluentbit-plugins/1.0.0-38-r12/git/input_simulator/Main.cpp:941:35: error: 'struct input_event' has no member named 'time'
  941 |         timersub(&currptr->rec.ie.time, &basetime, &timediff);
      |                                   ^~~~
webos-fluentbit-plugins/1.0.0-38-r12/git/input_simulator/Main.cpp:941:35: error: 'struct input_event' has no member named 'time'
  941 |         timersub(&currptr->rec.ie.time, &basetime, &timediff);
      |                                   ^~~~
webos-fluentbit-plugins/1.0.0-38-r12/git/input_simulator/Main.cpp:942:44: error: 'struct input_event' has no member named 'time'
  942 |         memcpy(&basetime, &currptr->rec.ie.time, sizeof(basetime));
      |                                            ^~~~
webos-fluentbit-plugins/1.0.0-38-r12/git/input_simulator/Main.cpp:953:25: error: 'struct input_event' has no member named 'time'
  953 |         currptr->rec.ie.time.tv_sec  = 0;
      |                         ^~~~
webos-fluentbit-plugins/1.0.0-38-r12/git/input_simulator/Main.cpp:954:25: error: 'struct input_event' has no member named 'time'
  954 |         currptr->rec.ie.time.tv_usec = 0;
      |                         ^~~~
Upstream-Status: Pending
---
 input_simulator/Main.cpp | 35 +++++++++++++++++------------------
 1 file changed, 17 insertions(+), 18 deletions(-)

diff --git a/input_simulator/Main.cpp b/input_simulator/Main.cpp
index 1f100a4..d9496ac 100644
--- a/input_simulator/Main.cpp
+++ b/input_simulator/Main.cpp
@@ -578,7 +578,7 @@ static void print_input_packet(struct record_format_payload *rec)
     if (!verbose)
         return;
 
-    printf("Event: time %ld.%06ld, idev(%d), ", ie->time.tv_sec, ie->time.tv_usec, rec->idev);
+    printf("Event: time %ld.%06ld, idev(%d), ", ie->input_event_sec, ie->input_event_usec, rec->idev);
     switch (ie->type) {
     case EV_SYN: // 0
         printf("--------------- SYN_REPORT ---------------\n");
@@ -844,7 +844,7 @@ static int playback_mode(const char *capture_path)
 {
     struct input_event_node *currptr;
     struct timespec t1, t2;
-    struct timeval basetime;
+    long long basetime_usec;
     int ret = EXIT_SUCCESS;
 
     open_workset_files_or_abort(capture_path, O_WRONLY | O_NONBLOCK, O_RDONLY);
@@ -912,7 +912,7 @@ static int playback_mode(const char *capture_path)
         goto exit;
     }
     // We obtain the basetime from the first packet
-    memcpy(&basetime, &currptr->rec.ie.time, sizeof(basetime));
+    basetime_usec = currptr->rec.ie.input_event_sec * 1000000 + currptr->rec.ie.input_event_usec;
     print_input_packet(&currptr->rec);
     // difference of t1 and t2 is the elapsed time we spent executing the previous packet
     if (clock_gettime(CLOCK_MONOTONIC_RAW, &t1) != 0) {
@@ -924,34 +924,33 @@ static int playback_mode(const char *capture_path)
 
     currptr = currptr->next;
     while (!should_exit && currptr != ielist.tail) {
-        struct timeval t1val, t2val, monodiff, timediff;
-        unsigned int usecs;
+        long long t1val, t2val, monodiff, timediff, curtime_usec;
 
         if (clock_gettime(CLOCK_MONOTONIC_RAW, &t2) != 0) {
             perror("Read raw monotonic clock 2");
             ret = EXIT_FAILURE;
             goto exit;
         }
-        TIMESPEC_TO_TIMEVAL(&t1val, &t1);
-        TIMESPEC_TO_TIMEVAL(&t2val, &t2);
+        t1val = t1.tv_sec * 1000000 + t1.tv_nsec / 1000;
+        t2val = t2.tv_sec * 1000000 + t2.tv_nsec / 1000;
         // monodiff stores MONOTONIC elapsed time between t1 and t2
-        timersub(&t2val, &t1val, &monodiff);
+        monodiff = t2val - t1val;
         memcpy(&t1, &t2, sizeof(t1));
         // timediff stores the difference between current packet time and previous basetime
-        timersub(&currptr->rec.ie.time, &basetime, &timediff);
-        memcpy(&basetime, &currptr->rec.ie.time, sizeof(basetime));
-        if (timercmp(&timediff, &monodiff, >)) {
-            struct timeval finaldiff;
+        curtime_usec = currptr->rec.ie.input_event_sec * 1000000 + currptr->rec.ie.input_event_usec;
+        timediff = curtime_usec - basetime_usec;
+        basetime_usec = curtime_usec;
+        if (timediff > monodiff) {
+            long long finaldiff;
 
             // Only sleep if we didn't spend more time executing previous packet than the time we should originally wait
-            timersub(&timediff, &monodiff, &finaldiff);
-            usecs = finaldiff.tv_sec * 1000000 + finaldiff.tv_usec;
-            printf("Sleeping %4u.%06u\n", usecs / 1000000, usecs % 1000000);
-            usleep(usecs);
+            finaldiff = timediff - monodiff;
+            printf("Sleeping %4u.%06u\n", finaldiff / 1000000, finaldiff % 1000000);
+            usleep(finaldiff);
         }
         // Reset the packet timestamp read from the capture file
-        currptr->rec.ie.time.tv_sec  = 0;
-        currptr->rec.ie.time.tv_usec = 0;
+        currptr->rec.ie.input_event_sec  = 0;
+        currptr->rec.ie.input_event_usec = 0;
 
         print_input_packet(&currptr->rec);
         exec_input_packet(&currptr->rec);
