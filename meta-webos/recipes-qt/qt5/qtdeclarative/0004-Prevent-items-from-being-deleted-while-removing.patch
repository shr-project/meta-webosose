From 432c541406c06d535469d49ef969e2c17ad1cef6 Mon Sep 17 00:00:00 2001
From: Elvis Lee <kwangwoong.lee@lge.com>
Date: Wed, 10 Dec 2014 15:28:17 +0900
Subject: [PATCH] Prevent items from being deleted while removing

Delegate items can be deleted when remove them from cache list.
That may cause to crash. ObjectReference keep the items from being deleted.
---
 src/qml/types/qqmldelegatemodel.cpp | 11 +++++++++++
 1 file changed, 11 insertions(+)

diff --git a/src/qml/types/qqmldelegatemodel.cpp b/src/qml/types/qqmldelegatemodel.cpp
index af328fbe2a..4d6d7b09ca 100644
--- a/src/qml/types/qqmldelegatemodel.cpp
+++ b/src/qml/types/qqmldelegatemodel.cpp
@@ -1488,6 +1488,12 @@ void QQmlDelegateModel::_q_itemsRemoved(int index, int count)
 
     d->m_count -= count;
     const QList<QQmlDelegateModelItem *> cache = d->m_cache;
+    //Prevents items being deleted in remove loop
+    for (int i = 0; i < cache.count(); ++i) {
+        QQmlDelegateModelItem *item = cache.at(i);
+        item->referenceObject();
+    }
+
     for (int i = 0, c = cache.count();  i < c; ++i) {
         QQmlDelegateModelItem *item = cache.at(i);
         // layout change triggered by removal of a previous item might have
@@ -1504,6 +1510,11 @@ void QQmlDelegateModel::_q_itemsRemoved(int index, int count)
             item->setModelIndex(-1, -1, -1);
         }
     }
+    //Release items which are referenced before the loop
+    for (int i = 0; i < cache.count(); ++i) {
+        QQmlDelegateModelItem *item = cache.at(i);
+        item->releaseObject();
+    }
 
     QVector<Compositor::Remove> removes;
     d->m_compositor.listItemsRemoved(&d->m_adaptorModel, index, count, &removes);
