From 62989966bde9d8cad9f50388d316a152c08be3a4 Mon Sep 17 00:00:00 2001
From: Gleb Manyagin <gleb.manyagin@lge.com>
Date: Mon, 15 Jan 2018 15:19:17 +0300
Subject: [PATCH] Fix for Hindi glyph break

When applying the effect of outline (stroke) to glyphs
(Bengali, Devanagari or Gurmukhi scripts) the letters look incorrect.
Since the right fix is unknown yet, we propose a workaround that
paints letters without effect over old symbols.

Change-Id: I4384e0b9078b8adb9eb376ca12cd568b70cb9d32

Upstream-status: [Inappropriate]
---
 src/quick/items/qquicktextnode_p.h       |  1 +
 src/quick/items/qquicktextnodeengine.cpp | 33 +++++++++++++++++++++---
 2 files changed, 30 insertions(+), 4 deletions(-)

diff --git a/src/quick/items/qquicktextnode_p.h b/src/quick/items/qquicktextnode_p.h
index 2969ce9db..c25d01dc7 100644
--- a/src/quick/items/qquicktextnode_p.h
+++ b/src/quick/items/qquicktextnode_p.h
@@ -107,6 +107,7 @@ public:
 
     bool useNativeRenderer() const { return m_useNativeRenderer; }
     void setUseNativeRenderer(bool on) { m_useNativeRenderer = on; }
+    QQuickItem *ownerElement() const { return m_ownerElement; }
 
 private:
     QSGInternalRectangleNode *m_cursorNode;
diff --git a/src/quick/items/qquicktextnodeengine.cpp b/src/quick/items/qquicktextnodeengine.cpp
index f407de84c..00e1600c6 100644
--- a/src/quick/items/qquicktextnodeengine.cpp
+++ b/src/quick/items/qquicktextnodeengine.cpp
@@ -767,6 +767,20 @@ void QQuickTextNodeEngine::mergeProcessedNodes(QList<BinaryTreeNode *> *regularN
     }
 }
 
+static bool isDoubleDraw(const QQuickTextNodeEngine::BinaryTreeNode* node, const QString &text) {
+    if (!node || text.isEmpty()) return false;
+    for (auto range : node->ranges) {
+        const QString &string_part = text.mid(range.first, (range.second - range.first) + 1);
+        for (auto symb : string_part) {
+            if (symb.script() == QChar::Script_Bengali
+            || symb.script() == QChar::Script_Devanagari
+            || symb.script() == QChar::Script_Gurmukhi)
+                return true;
+        }
+    }
+    return false;
+}
+
 void  QQuickTextNodeEngine::addToSceneGraph(QQuickTextNode *parentNode,
                                             QQuickText::TextStyle style,
                                             const QColor &styleColor)
@@ -777,7 +791,7 @@ void  QQuickTextNodeEngine::addToSceneGraph(QQuickTextNode *parentNode,
     QList<BinaryTreeNode *> nodes;
     QList<BinaryTreeNode *> imageNodes;
     mergeProcessedNodes(&nodes, &imageNodes);
-
+    const QString &ownerString = parentNode->ownerElement()->property("text").toString();
     for (int i = 0; i < m_backgrounds.size(); ++i) {
         const QRectF &rect = m_backgrounds.at(i).first;
         const QColor &color = m_backgrounds.at(i).second;
@@ -789,6 +803,8 @@ void  QQuickTextNodeEngine::addToSceneGraph(QQuickTextNode *parentNode,
     for (int i = 0; i < nodes.size(); ++i) {
         const BinaryTreeNode *node = nodes.at(i);
         parentNode->addGlyphs(node->position, node->glyphRun, node->color, style, styleColor, nullptr);
+        if (style == QQuickText::Outline && node->color != styleColor && isDoubleDraw(node, ownerString))
+            parentNode->addGlyphs(node->position, node->glyphRun, node->color, QQuickText::Normal, styleColor, 0);
     }
 
     for (int i = 0; i < imageNodes.size(); ++i) {
@@ -832,11 +848,17 @@ void  QQuickTextNodeEngine::addToSceneGraph(QQuickTextNode *parentNode,
 
             const BinaryTreeNode *nextNode = nextNodeIndex == nodes.size() ? 0 : nodes.at(nextNodeIndex);
 
-            if (previousNode != nullptr && previousNode->selectionState == Unselected)
+            if (previousNode != nullptr && previousNode->selectionState == Unselected) {
                 parentNode->addGlyphs(previousNode->position, previousNode->glyphRun, color, style, styleColor, clipNode);
+                if (style == QQuickText::Outline && color != styleColor && isDoubleDraw(previousNode, ownerString))
+                    parentNode->addGlyphs(previousNode->position, previousNode->glyphRun, color, QQuickText::Normal, styleColor, clipNode);
+            }
 
-            if (nextNode != nullptr && nextNode->selectionState == Unselected)
+            if (nextNode != nullptr && nextNode->selectionState == Unselected) {
                 parentNode->addGlyphs(nextNode->position, nextNode->glyphRun, color, style, styleColor, clipNode);
+                if (style == QQuickText::Outline && color != styleColor && isDoubleDraw(nextNode, ownerString))
+                    parentNode->addGlyphs(nextNode->position, nextNode->glyphRun, color, QQuickText::Normal, styleColor, clipNode);
+            }
 
             // If the previous or next node completely overlaps this one, then we have already drawn the glyphs of
             // this node
@@ -883,8 +905,11 @@ void  QQuickTextNodeEngine::addToSceneGraph(QQuickTextNode *parentNode,
                 drawCurrent = true;
             }
 
-            if (drawCurrent)
+            if (drawCurrent) {
                 parentNode->addGlyphs(node->position, node->glyphRun, color, style, styleColor, clipNode);
+                if (style == QQuickText::Outline && color != styleColor && isDoubleDraw(node, ownerString))
+                    parentNode->addGlyphs(node->position, node->glyphRun, color, QQuickText::Normal, styleColor, clipNode);
+            }
         }
     }
 
