From 45775ada6ff2709ff018d209f1db9d2e0e51885a Mon Sep 17 00:00:00 2001
From: Valery Volgutov <valery.volgutov@lge.com>
Date: Mon, 20 Apr 2020 20:42:56 +0300
Subject: [PATCH] Fix QQuickKeyNavigationAttached issue

When Repeater used for Item creation,
we have following issue:

When Repeater create new item and this item tried to
use keyboard.left or keyboard.right to other Repeater's item -
these items don't create yet, and we have issue with
navigation keys.

Set rightSet to true if right really changed.
When object call KeboardNavigation::setRight with null item.
rightSet field = true, but right field did not changed (null).
After that navigation keys works incorrect.
The same for other cases.

Task-number: QTBUG-83356
Change-Id: I9ea6d6a7d13ff989aac3d9e2d22467b48080de13
Upstream-Status: Submitted [https://codereview.qt-project.org/c/qt/qtdeclarative/+/299468]
---
 src/quick/items/qquickitem.cpp                | 12 +++---
 .../data/keynavigationtest_repeater.qml       | 37 +++++++++++++++++++
 .../auto/quick/qquickitem2/tst_qquickitem.cpp | 19 ++++++++++
 3 files changed, 62 insertions(+), 6 deletions(-)
 create mode 100644 tests/auto/quick/qquickitem2/data/keynavigationtest_repeater.qml

diff --git a/src/quick/items/qquickitem.cpp b/src/quick/items/qquickitem.cpp
index 9e32ccfee9..b5f8af5462 100644
--- a/src/quick/items/qquickitem.cpp
+++ b/src/quick/items/qquickitem.cpp
@@ -464,8 +464,8 @@ void QQuickKeyNavigationAttached::setLeft(QQuickItem *i)
     Q_D(QQuickKeyNavigationAttached);
     if (d->leftSet && d->left == i)
         return;
+    d->leftSet = d->left != i;
     d->left = i;
-    d->leftSet = true;
     QQuickKeyNavigationAttached* other =
             qobject_cast<QQuickKeyNavigationAttached*>(qmlAttachedPropertiesObject<QQuickKeyNavigationAttached>(i));
     if (other && !other->d_func()->rightSet){
@@ -486,8 +486,8 @@ void QQuickKeyNavigationAttached::setRight(QQuickItem *i)
     Q_D(QQuickKeyNavigationAttached);
     if (d->rightSet && d->right == i)
         return;
+    d->rightSet = d->right != i;
     d->right = i;
-    d->rightSet = true;
     QQuickKeyNavigationAttached* other =
             qobject_cast<QQuickKeyNavigationAttached*>(qmlAttachedPropertiesObject<QQuickKeyNavigationAttached>(i));
     if (other && !other->d_func()->leftSet){
@@ -508,8 +508,8 @@ void QQuickKeyNavigationAttached::setUp(QQuickItem *i)
     Q_D(QQuickKeyNavigationAttached);
     if (d->upSet && d->up == i)
         return;
+    d->upSet = d->up != i;
     d->up = i;
-    d->upSet = true;
     QQuickKeyNavigationAttached* other =
             qobject_cast<QQuickKeyNavigationAttached*>(qmlAttachedPropertiesObject<QQuickKeyNavigationAttached>(i));
     if (other && !other->d_func()->downSet){
@@ -530,8 +530,8 @@ void QQuickKeyNavigationAttached::setDown(QQuickItem *i)
     Q_D(QQuickKeyNavigationAttached);
     if (d->downSet && d->down == i)
         return;
+    d->downSet = d->down != i;
     d->down = i;
-    d->downSet = true;
     QQuickKeyNavigationAttached* other =
             qobject_cast<QQuickKeyNavigationAttached*>(qmlAttachedPropertiesObject<QQuickKeyNavigationAttached>(i));
     if (other && !other->d_func()->upSet) {
@@ -552,8 +552,8 @@ void QQuickKeyNavigationAttached::setTab(QQuickItem *i)
     Q_D(QQuickKeyNavigationAttached);
     if (d->tabSet && d->tab == i)
         return;
+    d->tabSet = d->tab != i;
     d->tab = i;
-    d->tabSet = true;
     QQuickKeyNavigationAttached* other =
             qobject_cast<QQuickKeyNavigationAttached*>(qmlAttachedPropertiesObject<QQuickKeyNavigationAttached>(i));
     if (other && !other->d_func()->backtabSet) {
@@ -574,8 +574,8 @@ void QQuickKeyNavigationAttached::setBacktab(QQuickItem *i)
     Q_D(QQuickKeyNavigationAttached);
     if (d->backtabSet && d->backtab == i)
         return;
+    d->backtabSet = d->backtab != i;
     d->backtab = i;
-    d->backtabSet = true;
     QQuickKeyNavigationAttached* other =
             qobject_cast<QQuickKeyNavigationAttached*>(qmlAttachedPropertiesObject<QQuickKeyNavigationAttached>(i));
     if (other && !other->d_func()->tabSet) {
diff --git a/tests/auto/quick/qquickitem2/data/keynavigationtest_repeater.qml b/tests/auto/quick/qquickitem2/data/keynavigationtest_repeater.qml
new file mode 100644
index 0000000000..12ce10e139
--- /dev/null
+++ b/tests/auto/quick/qquickitem2/data/keynavigationtest_repeater.qml
@@ -0,0 +1,37 @@
+import QtQuick 2.0
+
+Grid {
+    property var textModel: ["1", "2", "3", "4", "5"]
+    columns: 5
+    width: 50*textModel.length
+
+    Repeater {
+        id: repeater
+        model: textModel.length
+        Rectangle {
+            width: 50
+            height: 50
+            color: focus ? "red" : "lightgrey"
+            focus: index  == 2
+            Text {
+                id: t
+                text: textModel[index]
+            }
+            KeyNavigation.left:  repeater.itemAt(index - 1)
+            KeyNavigation.right: repeater.itemAt(index + 1)
+        }
+    }
+
+    function verify() {
+        for (var i = 0; i < repeater.count; i++) {
+            var item = repeater.itemAt(i);
+            var prev = repeater.itemAt(i - 1);
+            var next = repeater.itemAt(i + 1);
+            if (item.KeyNavigation.left != prev || item.KeyNavigation.right != next)
+                return false;
+        }
+
+        return true;
+    }
+}
+
diff --git a/tests/auto/quick/qquickitem2/tst_qquickitem.cpp b/tests/auto/quick/qquickitem2/tst_qquickitem.cpp
index 399535cfa6..db473d1ea1 100644
--- a/tests/auto/quick/qquickitem2/tst_qquickitem.cpp
+++ b/tests/auto/quick/qquickitem2/tst_qquickitem.cpp
@@ -89,6 +89,7 @@ private slots:
     void keyNavigation_implicitDestroy();
     void keyNavigation_focusReason();
     void keyNavigation_loop();
+    void keyNavigation_repeater();
     void layoutMirroring();
     void layoutMirroringWindow();
     void layoutMirroringIllegalParent();
@@ -2273,6 +2274,24 @@ void tst_QQuickItem::keyNavigation_loop()
     delete window;
 }
 
+void tst_QQuickItem::keyNavigation_repeater()
+{
+    // QTBUG-83356
+    QQuickView *window = new QQuickView(nullptr);
+    window->setBaseSize(QSize(240,320));
+
+    window->setSource(testFileUrl("keynavigationtest_repeater.qml"));
+    window->show();
+    window->requestActivate();
+
+    QVariant result;
+    QVERIFY(QMetaObject::invokeMethod(window->rootObject(), "verify",
+            Q_RETURN_ARG(QVariant, result)));
+    QVERIFY(result.toBool());
+
+    delete window;
+}
+
 void tst_QQuickItem::smooth()
 {
     QQmlComponent component(&engine);
