From 9b36ff8e881205f88b29792188c4ae553b29ee9b Mon Sep 17 00:00:00 2001
From: YoungSun Park <cathy.park@lge.com>
Date: Fri, 16 Aug 2019 21:32:22 +0900
Subject: [PATCH] QQuickWindow: Consider z-order of children when delivering
 pointer events

When creating a target item list for handling pointer events, put
children after the parent item if they have negative z-order value.
This fixes an issue where an item does not receive a pointer event if
there is a child item that accepts the event even when that child item
is shown under the parent item as per the stacking order.

Change-Id: I711faa22516f5c2396b1138dc507bcaa4ba22241
Upstream-Status: Pending
---
 src/quick/items/qquickwindow.cpp | 17 +++++++++++++++--
 1 file changed, 15 insertions(+), 2 deletions(-)

diff --git a/src/quick/items/qquickwindow.cpp b/src/quick/items/qquickwindow.cpp
index 8fbd18c37..d545d3b8e 100644
--- a/src/quick/items/qquickwindow.cpp
+++ b/src/quick/items/qquickwindow.cpp
@@ -2425,16 +2425,24 @@ QVector<QQuickItem *> QQuickWindowPrivate::pointerTargets(QQuickItem *item, QQui
             return targets;
     }
 
-    // recurse for children
+    // Separate children into two groups by z-order
     QList<QQuickItem *> children = itemPrivate->paintOrderChildItems();
+    QList<QQuickItem *> children_lower, children_upper;
     for (int ii = children.count() - 1; ii >= 0; --ii) {
         QQuickItem *child = children.at(ii);
         auto childPrivate = QQuickItemPrivate::get(child);
         if (!child->isVisible() || !child->isEnabled() || childPrivate->culled)
             continue;
-        targets << pointerTargets(child, point, checkMouseButtons, checkAcceptsTouch);
+        if (child->z() >= 0)
+            children_upper << child;
+        else
+            children_lower << child;
     }
 
+    // recurse for children over item
+    for (int ii = 0; ii < children_upper.count(); ++ii)
+        targets << pointerTargets(children_upper.at(ii), point, checkMouseButtons, checkAcceptsTouch);
+
     bool relevant = item->contains(itemPos);
     if (itemPrivate->hasPointerHandlers()) {
         if (!relevant)
@@ -2448,6 +2456,11 @@ QVector<QQuickItem *> QQuickWindowPrivate::pointerTargets(QQuickItem *item, QQui
     }
     if (relevant)
         targets << item; // add this item last: children take precedence
+
+    // recurse for children underneath item
+    for (int ii = 0; ii < children_lower.count(); ++ii)
+        targets << pointerTargets(children_lower.at(ii), point, checkMouseButtons, checkAcceptsTouch);
+
     return targets;
 }
 
