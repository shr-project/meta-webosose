From f8b275ea969822f49d2b627b01dbb29e5ea23f90 Mon Sep 17 00:00:00 2001
From: Jaeyoon Jung <jaeyoon.jung@lge.com>
Date: Thu, 8 Feb 2018 14:24:20 +0900
Subject: [PATCH] Warn circular dependency when loading types

Detect a circular dependency between two QML types and print a warning
message if found.

Task-number: QTBUG-83354
Change-Id: I826b28775ba3212ccccaeb56d50b64fec6f38ea9
Reviewed-by: Ulf Hermann <ulf.hermann@qt.io>
(cherry picked from commit f0c08dc2175cffadb73e06d2cc69a152002e0df0)
Upstream-Status: Backported [https://codereview.qt-project.org/c/qt/qtdeclarative/+/303661]
---
 src/qml/qml/qqmltypeloader.cpp                           | 6 ++++++
 .../auto/qml/qqmltypeloader/data/CircularDependency.qml  | 3 +++
 .../qml/qqmltypeloader/data/CircularDependencyBase.qml   | 3 +++
 tests/auto/qml/qqmltypeloader/tst_qqmltypeloader.cpp     | 9 +++++++++
 4 files changed, 21 insertions(+)
 create mode 100644 tests/auto/qml/qqmltypeloader/data/CircularDependency.qml
 create mode 100644 tests/auto/qml/qqmltypeloader/data/CircularDependencyBase.qml

diff --git a/src/qml/qml/qqmltypeloader.cpp b/src/qml/qml/qqmltypeloader.cpp
index 9e5bc0b021..7a96cc064b 100644
--- a/src/qml/qml/qqmltypeloader.cpp
+++ b/src/qml/qml/qqmltypeloader.cpp
@@ -516,6 +516,12 @@ void QQmlDataBlob::addDependency(QQmlDataBlob *blob)
 
     m_waitingFor.append(blob);
     blob->m_waitingOnMe.append(this);
+
+    // Check circular dependency
+    if (m_waitingOnMe.indexOf(blob) >= 0) {
+        qWarning() << "Cyclic dependency detected between" << this->url().toString() << "and" << blob->url().toString();
+        m_data.setStatus(Error);
+    }
 }
 
 /*!
diff --git a/tests/auto/qml/qqmltypeloader/data/CircularDependency.qml b/tests/auto/qml/qqmltypeloader/data/CircularDependency.qml
new file mode 100644
index 0000000000..0b7c030063
--- /dev/null
+++ b/tests/auto/qml/qqmltypeloader/data/CircularDependency.qml
@@ -0,0 +1,3 @@
+import QtQml 2.0
+
+CircularDependencyBase {}
diff --git a/tests/auto/qml/qqmltypeloader/data/CircularDependencyBase.qml b/tests/auto/qml/qqmltypeloader/data/CircularDependencyBase.qml
new file mode 100644
index 0000000000..d068d1cabc
--- /dev/null
+++ b/tests/auto/qml/qqmltypeloader/data/CircularDependencyBase.qml
@@ -0,0 +1,3 @@
+import QtQml 2.0
+
+CircularDependency {}
diff --git a/tests/auto/qml/qqmltypeloader/tst_qqmltypeloader.cpp b/tests/auto/qml/qqmltypeloader/tst_qqmltypeloader.cpp
index 52c722aac8..cee4d5d983 100644
--- a/tests/auto/qml/qqmltypeloader/tst_qqmltypeloader.cpp
+++ b/tests/auto/qml/qqmltypeloader/tst_qqmltypeloader.cpp
@@ -57,6 +57,7 @@ private slots:
     void multiSingletonModule();
     void implicitComponentModule();
     void qrcRootPathUrl();
+    void circularDependency();
 };
 
 void tst_QQMLTypeLoader::testLoadComplete()
@@ -511,6 +512,14 @@ void tst_QQMLTypeLoader::qrcRootPathUrl()
     QCOMPARE(component.status(), QQmlComponent::Ready);
 }
 
+void tst_QQMLTypeLoader::circularDependency()
+{
+    QQmlEngine engine;
+    QTest::ignoreMessage(QtWarningMsg, QRegularExpression("Cyclic dependency detected between (.*) and (.*)"));
+    QQmlComponent component(&engine, testFileUrl("CircularDependency.qml"));
+    QCOMPARE(component.status(), QQmlComponent::Null);
+}
+
 QTEST_MAIN(tst_QQMLTypeLoader)
 
 #include "tst_qqmltypeloader.moc"
