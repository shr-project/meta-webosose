From 359fa7b2ff3176b583a89ba85f0ba71ca677fa09 Mon Sep 17 00:00:00 2001
From: Elvis Lee <kwangwoong.lee@lge.com>
Date: Wed, 10 Dec 2014 15:28:17 +0900
Subject: [PATCH] Prevent items from being deleted while removing

Delegate items can be deleted when remove them from cache list. That may
cause a crash. So call referenceObject to keep the item from being
deleted.

Task-number: QTBUG-83352
Change-Id: Id5d7ab6dbf21682940f5393ea4e843c2448f7d81
Reviewed-by: Ulf Hermann <ulf.hermann@qt.io>
(cherry picked from commit 37fcffa035d55ac00f85f57ce1390fff3be213c6)
Reviewed-by: Qt Cherry-pick Bot <cherrypick_bot@qt-project.org>
Upstream-Status: Backported [https://codereview.qt-project.org/c/qt/qtdeclarative/+/303943]
---
 src/qml/types/qqmldelegatemodel.cpp | 7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/src/qml/types/qqmldelegatemodel.cpp b/src/qml/types/qqmldelegatemodel.cpp
index af328fbe2a..df7d354fc3 100644
--- a/src/qml/types/qqmldelegatemodel.cpp
+++ b/src/qml/types/qqmldelegatemodel.cpp
@@ -1488,6 +1488,10 @@ void QQmlDelegateModel::_q_itemsRemoved(int index, int count)
 
     d->m_count -= count;
     const QList<QQmlDelegateModelItem *> cache = d->m_cache;
+    //Prevents items being deleted in remove loop
+    for (QQmlDelegateModelItem *item : cache)
+        item->referenceObject();
+
     for (int i = 0, c = cache.count();  i < c; ++i) {
         QQmlDelegateModelItem *item = cache.at(i);
         // layout change triggered by removal of a previous item might have
@@ -1504,6 +1508,9 @@ void QQmlDelegateModel::_q_itemsRemoved(int index, int count)
             item->setModelIndex(-1, -1, -1);
         }
     }
+    //Release items which are referenced before the loop
+    for (QQmlDelegateModelItem *item : cache)
+        item->releaseObject();
 
     QVector<Compositor::Remove> removes;
     d->m_compositor.listItemsRemoved(&d->m_adaptorModel, index, count, &removes);
