From 2a09ce61abdde70cd21cc82a77fc2815fbb0d581 Mon Sep 17 00:00:00 2001
From: Elvis Lee <kwangwoong.lee@lge.com>
Date: Mon, 20 Apr 2015 17:24:14 +0900
Subject: [PATCH] do not call windowDestroyed when cleanup

:Release Notes:
Otherwise client is hang on waiting wayland event.

This is a workaround until to support QOffscreenSurface in QPA-wayland.
And this workaround has no side-effect because cleanup happens when
quitting a app.

:Detailed Notes:
windowDestroyed trys makeCurrent for QOffscreenSurface.
But current QPA doesn't support QOffscreenSurface, so normal QWindow is
created. Then it will request to allocate GPU buffer on makeCurrent.
At that time, thread for Qtwayland is already quit, because the cleanup
happens on aboutToQuit. So nothing can be read from wayland connection.

:Testing Performed:
qt54_35

:QA Notes:

:Issues Addressed:
[DRD-4826] Hang when quitting a Qt app(not a webapp).
[DRD-8267] Discoverylite fails to close properly on Qt5.4 build

Upstream-Status: do not apply (local workaround)
---
 src/quick/scenegraph/qsgrenderloop.cpp | 1 -
 1 file changed, 1 deletion(-)

diff --git a/src/quick/scenegraph/qsgrenderloop.cpp b/src/quick/scenegraph/qsgrenderloop.cpp
index fa2eed2b63..4962b11063 100644
--- a/src/quick/scenegraph/qsgrenderloop.cpp
+++ b/src/quick/scenegraph/qsgrenderloop.cpp
@@ -109,7 +109,6 @@ void QSGRenderLoop::cleanup()
     for (QQuickWindow *w : s_instance->windows()) {
         QQuickWindowPrivate *wd = QQuickWindowPrivate::get(w);
         if (wd->windowManager == s_instance) {
-           s_instance->windowDestroyed(w);
            wd->windowManager = nullptr;
         }
     }
