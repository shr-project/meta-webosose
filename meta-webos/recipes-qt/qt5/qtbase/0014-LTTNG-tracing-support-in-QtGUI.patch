From a1513597992b3487fdfdcf693824900369b7f5d1 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Jos=C3=A9=20Dapena=20Paz?= <jdapena@igalia.com>
Date: Fri, 13 Jun 2014 18:48:49 +0200
Subject: [PATCH] LTTNG tracing support in QtGUI

:Release Notes:
LTTNG tracing support in QtGUI, with image processing tracepoints.

:Detailed Notes:
Added LTTNG build detection support.

Added LTTNG tracing for QtGUI.

Added tracepoints for:
* QImage and QPixmap copy and transform operations.
* OpenGL paint engine texture cache texture upload
* OpenGL paint engine draw texture

:Testing Performed:

:QA Notes:

:Issues Addressed:
[BHV-10150] Update sprint 1 lttng analysis with new image decoder tracepoints
[BHV-6572] LSM animations may stall during app launch (was: Double swipe stalls while loading apps)

Signed-off-by: Martin Jansa <Martin.Jansa@gmail.com>

Change-Id: I03150d6ff80cbbcd787133d75854715cb81b5571
---
 src/gui/image/qimage.cpp                    | 15 +++++++++++++++
 src/gui/image/qpixmap.cpp                   |  8 ++++++++
 src/gui/opengl/qopenglframebufferobject.cpp |  3 +++
 src/gui/opengl/qopenglpaintengine.cpp       |  4 ++++
 src/gui/opengl/qopengltexturecache.cpp      |  3 +++
 5 files changed, 33 insertions(+)

diff --git a/src/gui/image/qimage.cpp b/src/gui/image/qimage.cpp
index ef0481bdb2..c7a6ecb599 100644
--- a/src/gui/image/qimage.cpp
+++ b/src/gui/image/qimage.cpp
@@ -66,6 +66,8 @@
 #include <private/qimage_p.h>
 #include <private/qfont_p.h>
 
+#include <qtgui_tracepoints_p.h>
+
 QT_BEGIN_NAMESPACE
 
 static inline bool isLocked(QImageData *data)
@@ -120,6 +122,8 @@ QImageData * QImageData::create(const QSize &size, QImage::Format format)
     if (!size.isValid() || format == QImage::Format_Invalid)
         return nullptr;                             // invalid parameter(s)
 
+    Q_TRACE(qimagedata_create_entry);
+
     int width = size.width();
     int height = size.height();
     int depth = qt_depthForFormat(format);
@@ -1146,6 +1150,7 @@ static void copyMetadata(QImage *dst, const QImage &src)
 */
 QImage QImage::copy(const QRect& r) const
 {
+    Q_TRACE(qimage_copy_entry);
     if (!d)
         return QImage();
 
@@ -2805,6 +2810,8 @@ QImage QImage::scaled(const QSize& s, Qt::AspectRatioMode aspectMode, Qt::Transf
     if (newSize == size())
         return *this;
 
+    Q_TRACE(qimage_scaled);
+
     QTransform wm = QTransform::fromScale((qreal)newSize.width() / width(), (qreal)newSize.height() / height());
     QImage img = transformed(wm, mode);
     return img;
@@ -2833,6 +2840,8 @@ QImage QImage::scaledToWidth(int w, Qt::TransformationMode mode) const
     if (w <= 0)
         return QImage();
 
+    Q_TRACE(qimage_scaledtowidth_entry);
+
     qreal factor = (qreal) w / width();
     QTransform wm = QTransform::fromScale(factor, factor);
     return transformed(wm, mode);
@@ -2861,6 +2870,8 @@ QImage QImage::scaledToHeight(int h, Qt::TransformationMode mode) const
     if (h <= 0)
         return QImage();
 
+    Q_TRACE(qimage_scaled_to_height_entry);;
+
     qreal factor = (qreal) h / height();
     QTransform wm = QTransform::fromScale(factor, factor);
     return transformed(wm, mode);
@@ -3362,6 +3373,8 @@ QImage QImage::rgbSwapped_helper() const
     if (isNull())
         return *this;
 
+    Q_TRACE(qimage_rgbswapped_helper_entry);
+
     QImage res;
 
     switch (d->format) {
@@ -4768,6 +4781,8 @@ QImage QImage::transformed(const QTransform &matrix, Qt::TransformationMode mode
     if (!d)
         return QImage();
 
+    Q_TRACE(qimage_transformed_entry);
+
     // source image data
     int ws = width();
     int hs = height();
diff --git a/src/gui/image/qpixmap.cpp b/src/gui/image/qpixmap.cpp
index 7e862e9826..0ad4e2280e 100644
--- a/src/gui/image/qpixmap.cpp
+++ b/src/gui/image/qpixmap.cpp
@@ -66,6 +66,8 @@
 #include "qpixmap_raster_p.h"
 #include "private/qhexstring_p.h"
 
+#include <qtgui_tracepoints_p.h>
+
 QT_BEGIN_NAMESPACE
 
 static bool qt_pixmap_thread_test()
@@ -1126,6 +1128,8 @@ QPixmap QPixmap::scaled(const QSize& s, Qt::AspectRatioMode aspectMode, Qt::Tran
     if (newSize == size())
         return *this;
 
+    Q_TRACE(qpixmap_scaled);
+
     QTransform wm = QTransform::fromScale((qreal)newSize.width() / width(),
                                           (qreal)newSize.height() / height());
     QPixmap pix = transformed(wm, mode);
@@ -1155,6 +1159,8 @@ QPixmap QPixmap::scaledToWidth(int w, Qt::TransformationMode mode) const
     if (w <= 0)
         return QPixmap();
 
+    Q_TRACE(qpixmap_scaledtowidth_entry);
+
     qreal factor = (qreal) w / width();
     QTransform wm = QTransform::fromScale(factor, factor);
     return transformed(wm, mode);
@@ -1183,6 +1189,8 @@ QPixmap QPixmap::scaledToHeight(int h, Qt::TransformationMode mode) const
     if (h <= 0)
         return QPixmap();
 
+    Q_TRACE(qpixmap_scaledtoheight_entry);
+
     qreal factor = (qreal) h / height();
     QTransform wm = QTransform::fromScale(factor, factor);
     return transformed(wm, mode);
diff --git a/src/gui/opengl/qopenglframebufferobject.cpp b/src/gui/opengl/qopenglframebufferobject.cpp
index cae3d516c4..439c9224ab 100644
--- a/src/gui/opengl/qopenglframebufferobject.cpp
+++ b/src/gui/opengl/qopenglframebufferobject.cpp
@@ -50,6 +50,8 @@
 #include <qimage.h>
 #include <QtCore/qbytearray.h>
 
+#include <qtgui_tracepoints_p.h>
+
 QT_BEGIN_NAMESPACE
 
 #ifndef QT_NO_DEBUG
@@ -472,6 +474,7 @@ void QOpenGLFramebufferObjectPrivate::init(QOpenGLFramebufferObject *, const QSi
                                            GLenum texture_target, GLenum internal_format,
                                            GLint samples, bool mipmap)
 {
+    Q_TRACE(qopenglframebufferobjectprivate_init_entry);
     QOpenGLContext *ctx = QOpenGLContext::currentContext();
 
     funcs.initializeOpenGLFunctions();
diff --git a/src/gui/opengl/qopenglpaintengine.cpp b/src/gui/opengl/qopenglpaintengine.cpp
index dc1619a7bc..ae78266abb 100644
--- a/src/gui/opengl/qopenglpaintengine.cpp
+++ b/src/gui/opengl/qopenglpaintengine.cpp
@@ -87,6 +87,8 @@
 
 #include <QDebug>
 
+#include <qtgui_tracepoints_p.h>
+
 #ifndef GL_KHR_blend_equation_advanced
 #define GL_KHR_blend_equation_advanced 1
 #define GL_MULTIPLY_KHR                   0x9294
@@ -635,6 +637,8 @@ static inline void setCoords(GLfloat *coords, const QOpenGLRect &rect)
 
 void QOpenGL2PaintEngineExPrivate::drawTexture(const QOpenGLRect& dest, const QOpenGLRect& src, const QSize &textureSize, bool opaque, bool pattern)
 {
+    Q_TRACE(qopengl2paintengineexprivate_drawtexture_entry);
+
     // Setup for texture drawing
     currentBrush = noBrush;
 
diff --git a/src/gui/opengl/qopengltexturecache.cpp b/src/gui/opengl/qopengltexturecache.cpp
index ef07dbe109..bdae5956d9 100644
--- a/src/gui/opengl/qopengltexturecache.cpp
+++ b/src/gui/opengl/qopengltexturecache.cpp
@@ -44,6 +44,8 @@
 #include <private/qimagepixmapcleanuphooks_p.h>
 #include <qpa/qplatformpixmap.h>
 
+#include <qtgui_tracepoints_p.h>
+
 QT_BEGIN_NAMESPACE
 
 class QOpenGLTextureCacheWrapper
@@ -157,6 +159,7 @@ GLuint QOpenGLTextureCache::bindTexture(QOpenGLContext *context, const QImage &i
 
 GLuint QOpenGLTextureCache::bindTexture(QOpenGLContext *context, qint64 key, const QImage &image, QOpenGLTextureUploader::BindOptions options)
 {
+    Q_TRACE(qopengltexturecache_bindtexture_entry);
     GLuint id;
     QOpenGLFunctions *funcs = context->functions();
     funcs->glGenTextures(1, &id);
