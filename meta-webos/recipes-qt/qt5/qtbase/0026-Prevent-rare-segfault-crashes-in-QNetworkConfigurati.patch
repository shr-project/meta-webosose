From b8fd644454d58f10b1b2ce64086a873241821fea Mon Sep 17 00:00:00 2001
From: Alexey Turitsyn <alexey.turitsyn@lge.com>
Date: Mon, 25 Apr 2016 14:47:21 +0300
Subject: [PATCH] Prevent rare segfault crashes in QNetworkConfigurationManager

:Release Notes:
Disconnect any slots associated with pollTimer
when object is about to be destroyed to remove any
pending events to be delivered.

:Detailed Notes:
Based on crashes callstack, segfault happens when
timer event triggers pollEngines() slot.
It could be memory corruption or some objects inside
sessionEngines list are broken.
It is hard to catch situation when it happens and
the workaround is prevent system going inside
pollEngines() function by stopping timer and
disconnecting all slots associated with timeout() signal
in QNetworkConfigurationManager destructor.

:Testing Performed:
... (.......-master) - ok

Upstream-Status: pending

:QA Notes:

:Issues Addressed:
[PLAT-18288] com.webos.app.inputcommon crashes at location
/usr/lib/libQt5Network.so.5(_ZN35QNetworkConfigurationManagerPrivate11pollEnginesEv+0x15d)

Change-Id: I7d4cd6e829a01d5c6b7289e553b1c92442cf5054
---
 src/network/bearer/qnetworkconfigmanager_p.cpp | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/src/network/bearer/qnetworkconfigmanager_p.cpp b/src/network/bearer/qnetworkconfigmanager_p.cpp
index a903ecda5f..dde346250e 100644
--- a/src/network/bearer/qnetworkconfigmanager_p.cpp
+++ b/src/network/bearer/qnetworkconfigmanager_p.cpp
@@ -82,6 +82,9 @@ QNetworkConfigurationManagerPrivate::~QNetworkConfigurationManagerPrivate()
 {
     QMutexLocker locker(&mutex);
 
+    disconnect(pollTimer, SIGNAL(timeout()), 0, 0);
+    pollTimer->stop();
+    pollTimer = NULL;
     qDeleteAll(sessionEngines);
     sessionEngines.clear();
     if (bearerThread)
