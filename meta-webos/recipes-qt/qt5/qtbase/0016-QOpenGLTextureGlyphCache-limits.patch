From 432c03a3e8c1709412d079bdfc2ec1eacd0fd266 Mon Sep 17 00:00:00 2001
From: Jani Hautakangas <jani.hautakangas@lge.com>
Date: Wed, 29 Oct 2014 00:21:30 +0200
Subject: [PATCH] QOpenGLTextureGlyphCache limits

:Release Notes:
Expose environment variables to control glyph cache limits

Upstream-Status: Inappropriate [specific to tv]
---
 src/gui/opengl/qopengltextureglyphcache.cpp | 16 ++++++++++++++++
 src/gui/opengl/qopengltextureglyphcache_p.h |  3 +++
 src/gui/painting/qtextureglyphcache.cpp     |  4 ++--
 src/gui/painting/qtextureglyphcache_p.h     | 13 ++++++++++---
 4 files changed, 31 insertions(+), 5 deletions(-)
 mode change 100644 => 100755 src/gui/opengl/qopengltextureglyphcache.cpp

diff --git a/src/gui/opengl/qopengltextureglyphcache.cpp b/src/gui/opengl/qopengltextureglyphcache.cpp
old mode 100644
new mode 100755
index 490dc99749..90897a111e
--- a/src/gui/opengl/qopengltextureglyphcache.cpp
+++ b/src/gui/opengl/qopengltextureglyphcache.cpp
@@ -61,6 +61,8 @@ QOpenGLTextureGlyphCache::QOpenGLTextureGlyphCache(QFontEngine::GlyphFormat form
     , m_filterMode(Nearest)
     , m_serialNumber(next_qopengltextureglyphcache_serial_number())
     , m_buffer(QOpenGLBuffer::VertexBuffer)
+    , m_maxDefaultTextureWidth(0)
+    , m_maxDefaultTextureHeight(0)
 {
 #ifdef QT_GL_TEXTURE_GLYPH_CACHE_DEBUG
     qDebug(" -> QOpenGLTextureGlyphCache() %p for context %p.", this, QOpenGLContext::currentContext());
@@ -82,6 +84,14 @@ QOpenGLTextureGlyphCache::QOpenGLTextureGlyphCache(QFontEngine::GlyphFormat form
     m_textureCoordinateArray[5] = 1.0f;
     m_textureCoordinateArray[6] = 0.0f;
     m_textureCoordinateArray[7] = 1.0f;
+
+    const QByteArray w = qgetenv("QT_OPENGL_TEXTURE_GLYPH_CACHE_MAX_WIDTH");
+    if (!w.isEmpty())
+        m_maxDefaultTextureWidth = w.toInt();
+
+    const QByteArray h = qgetenv("QT_OPENGL_TEXTURE_GLYPH_CACHE_MAX_HEIGHT");
+    if (!h.isEmpty())
+        m_maxDefaultTextureHeight = h.toInt();
 }
 
 QOpenGLTextureGlyphCache::~QOpenGLTextureGlyphCache()
@@ -446,6 +456,9 @@ int QOpenGLTextureGlyphCache::glyphPadding() const
 
 int QOpenGLTextureGlyphCache::maxTextureWidth() const
 {
+    if (m_maxDefaultTextureWidth)
+        return m_maxDefaultTextureWidth;
+
     QOpenGLContext *ctx = const_cast<QOpenGLContext *>(QOpenGLContext::currentContext());
     if (ctx == 0)
         return QImageTextureGlyphCache::maxTextureWidth();
@@ -455,6 +468,9 @@ int QOpenGLTextureGlyphCache::maxTextureWidth() const
 
 int QOpenGLTextureGlyphCache::maxTextureHeight() const
 {
+    if (m_maxDefaultTextureHeight)
+        return m_maxDefaultTextureHeight;
+
     QOpenGLContext *ctx = const_cast<QOpenGLContext *>(QOpenGLContext::currentContext());
     if (ctx == 0)
         return QImageTextureGlyphCache::maxTextureHeight();
diff --git a/src/gui/opengl/qopengltextureglyphcache_p.h b/src/gui/opengl/qopengltextureglyphcache_p.h
index 38c9aede7d..2e98331074 100644
--- a/src/gui/opengl/qopengltextureglyphcache_p.h
+++ b/src/gui/opengl/qopengltextureglyphcache_p.h
@@ -171,6 +171,9 @@ private:
 
     int m_serialNumber;
 
+    int m_maxDefaultTextureWidth;
+    int m_maxDefaultTextureHeight;
+
     QOpenGLBuffer m_buffer;
     QOpenGLVertexArrayObject m_vao;
 };
diff --git a/src/gui/painting/qtextureglyphcache.cpp b/src/gui/painting/qtextureglyphcache.cpp
index 06fa4bf95e..ce689aca03 100644
--- a/src/gui/painting/qtextureglyphcache.cpp
+++ b/src/gui/painting/qtextureglyphcache.cpp
@@ -176,8 +176,8 @@ bool QTextureGlyphCache::populate(QFontEngine *fontEngine, int numGlyphs, const
     rowHeight += paddingDoubled;
 
     if (m_w == 0) {
-        if (fontEngine->maxCharWidth() <= QT_DEFAULT_TEXTURE_GLYPH_CACHE_WIDTH)
-            m_w = QT_DEFAULT_TEXTURE_GLYPH_CACHE_WIDTH;
+        if (fontEngine->maxCharWidth() <= defaultGlyphCacheWidth())
+            m_w = defaultGlyphCacheWidth();
         else
             m_w = qNextPowerOfTwo(qCeil(fontEngine->maxCharWidth()) - 1);
     }
diff --git a/src/gui/painting/qtextureglyphcache_p.h b/src/gui/painting/qtextureglyphcache_p.h
index 37bff7e449..36e92373a1 100644
--- a/src/gui/painting/qtextureglyphcache_p.h
+++ b/src/gui/painting/qtextureglyphcache_p.h
@@ -76,8 +76,13 @@ class Q_GUI_EXPORT QTextureGlyphCache : public QFontEngineGlyphCache
 public:
     QTextureGlyphCache(QFontEngine::GlyphFormat format, const QTransform &matrix, const QColor &color = QColor())
         : QFontEngineGlyphCache(format, matrix, color), m_current_fontengine(0),
-                                               m_w(0), m_h(0), m_cx(0), m_cy(0), m_currentRowHeight(0)
-        { }
+                                               m_w(0), m_h(0), m_cx(0), m_cy(0), m_currentRowHeight(0),
+                                               m_defaultGlyphCacheWidth(QT_DEFAULT_TEXTURE_GLYPH_CACHE_WIDTH)
+        {
+            static const QByteArray env = qgetenv("QT_DEFAULT_TEXTURE_GLYPH_CACHE_WIDTH");
+            if (!env.isEmpty())
+                m_defaultGlyphCacheWidth = env.toInt();
+        }
 
     ~QTextureGlyphCache();
 
@@ -138,13 +143,14 @@ public:
     inline bool isNull() const { return m_h == 0; }
 
     QHash<GlyphAndSubPixelPosition, Coord> coords;
-    virtual int maxTextureWidth() const { return QT_DEFAULT_TEXTURE_GLYPH_CACHE_WIDTH; }
+    virtual int maxTextureWidth() const { return m_defaultGlyphCacheWidth; }
     virtual int maxTextureHeight() const { return -1; }
 
     QImage textureMapForGlyph(glyph_t g, QFixed subPixelPosition) const;
 
 protected:
     int calculateSubPixelPositionCount(glyph_t) const;
+    int defaultGlyphCacheWidth() { return m_defaultGlyphCacheWidth; }
 
     QFontEngine *m_current_fontengine;
     QHash<GlyphAndSubPixelPosition, Coord> m_pendingGlyphs;
@@ -154,6 +160,7 @@ protected:
     int m_cx; // current x
     int m_cy; // current y
     int m_currentRowHeight; // Height of last row
+    int m_defaultGlyphCacheWidth;
 };
 
 inline uint qHash(const QTextureGlyphCache::GlyphAndSubPixelPosition &g)
