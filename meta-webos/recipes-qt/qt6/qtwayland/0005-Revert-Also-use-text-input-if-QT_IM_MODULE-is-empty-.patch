From 8fabbce4fdf37e553ae2fb3793ea7b723bdd948b Mon Sep 17 00:00:00 2001
From: Elvis Lee <kwangwoong.lee@lge.com>
Date: Tue, 8 Nov 2022 10:15:43 +0900
Subject: [PATCH] Revert "Also use text-input if QT_IM_MODULE is empty or
 "wayland""

This reverts commit 3998df839238b141056d5233fcccf15be933b15d.

---
Upstream-Status: Inappropriate [webOS specific]

 src/client/qwaylanddisplay.cpp                      | 4 ----
 src/client/qwaylanddisplay_p.h                      | 6 +-----
 src/client/qwaylandintegration.cpp                  | 2 +-
 tests/auto/client/inputcontext/tst_inputcontext.cpp | 3 +--
 4 files changed, 3 insertions(+), 12 deletions(-)

diff --git a/src/client/qwaylanddisplay.cpp b/src/client/qwaylanddisplay.cpp
index 2d82f447..408b2bc6 100644
--- a/src/client/qwaylanddisplay.cpp
+++ b/src/client/qwaylanddisplay.cpp
@@ -833,10 +833,6 @@ bool QWaylandDisplay::isKeyboardAvailable() const
             [](const QWaylandInputDevice *device) { return device->keyboard() != nullptr; });
 }
 
-bool QWaylandDisplay::isClientSideInputContextRequested() const {
-    return mClientSideInputContextRequested;
-}
-
 #if QT_CONFIG(cursor)
 
 QWaylandCursor *QWaylandDisplay::waylandCursor()
diff --git a/src/client/qwaylanddisplay_p.h b/src/client/qwaylanddisplay_p.h
index 473016f1..3809de1e 100644
--- a/src/client/qwaylanddisplay_p.h
+++ b/src/client/qwaylanddisplay_p.h
@@ -185,7 +185,6 @@ public:
     wl_event_queue *frameEventQueue() { return m_frameEventQueue; };
 
     bool isKeyboardAvailable() const;
-    bool isClientSideInputContextRequested() const;
 
     void initEventThread();
 
@@ -276,10 +275,7 @@ private:
     struct wl_callback *mSyncCallback = nullptr;
     static const wl_callback_listener syncCallbackListener;
 
-    bool mClientSideInputContextRequested = [] () {
-        const QString& requested = QPlatformInputContextFactory::requested();
-        return !requested.isEmpty() && requested != QLatin1String("wayland");
-    }();
+    bool mClientSideInputContextRequested = !QPlatformInputContextFactory::requested().isNull();
     QStringList mTextInputManagerList;
     int mTextInputManagerIndex = INT_MAX;
 
diff --git a/src/client/qwaylandintegration.cpp b/src/client/qwaylandintegration.cpp
index 6d74de13..a874c55a 100644
--- a/src/client/qwaylandintegration.cpp
+++ b/src/client/qwaylandintegration.cpp
@@ -479,7 +479,7 @@ void QWaylandIntegration::reconfigureInputContext()
         qCWarning(lcQpaWayland) << "qtvirtualkeyboard currently is not supported at client-side,"
                                    " use QT_IM_MODULE=qtvirtualkeyboard at compositor-side.";
 
-    if (!mDisplay->isClientSideInputContextRequested()) {
+    if (requested.isNull()) {
         if (mDisplay->textInputMethodManager() != nullptr)
             mInputContext.reset(new QWaylandInputMethodContext(mDisplay.data()));
 #if QT_WAYLAND_TEXT_INPUT_V4_WIP
diff --git a/tests/auto/client/inputcontext/tst_inputcontext.cpp b/tests/auto/client/inputcontext/tst_inputcontext.cpp
index 9bcfa9e7..9e3d75e0 100644
--- a/tests/auto/client/inputcontext/tst_inputcontext.cpp
+++ b/tests/auto/client/inputcontext/tst_inputcontext.cpp
@@ -98,9 +98,8 @@ void tst_inputcontext::selectingInputContext_data()
     // Test compositor with Text Input extension
     QTest::newRow("ibus:text-input")    << QByteArray("ibus")    << mIbusModule;
     QTest::newRow("compose:text-input") << QByteArray("compose") << mComposeModule;
-    QTest::newRow("empty:text-input")   << QByteArray("")        << mTextInputModule;
+    QTest::newRow("empty:text-input")   << QByteArray("")        << mComposeModule;
     QTest::newRow("null:text-input")    << QByteArray()          << mTextInputModule;
-    QTest::newRow("wayland:text-input") << QByteArray("wayland") << mTextInputModule;
     QTest::newRow("fake:text-input")    << QByteArray("fake")    << mComposeModule;
 }
 
-- 
2.17.1

