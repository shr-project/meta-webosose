From 5a389b3ee5990760fccb42f9cef0d437a1b90ad4 Mon Sep 17 00:00:00 2001
From: "jaehak.lee" <jaehak.lee@lge.com>
Date: Wed, 16 Sep 2015 13:40:36 +0900
Subject: [PATCH] Enhance logging for wayland error detection

1) Change the name of wayland debug message file
2) Add pid, tid and monotonic time at wayland debug message
3) Print wl_log at PmLog for catching the stderr of wayland

Upstream-Status: Inappropriate [webOS specific]
---
 Makefile.am        | 14 ++++++++++++++
 configure.ac       | 12 ++++++++++++
 src/connection.c   | 23 +++++++++++++----------
 src/wayland-util.c | 18 ++++++++++++++++++
 4 files changed, 57 insertions(+), 10 deletions(-)

diff --git a/Makefile.am b/Makefile.am
index cc87392..8902192 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -45,6 +45,12 @@ libwayland_util_la_CFLAGS = $(AM_CFLAGS)
 libwayland_util_la_SOURCES =			\
 	src/wayland-util.c			\
 	src/wayland-util.h
+libwayland_util_la_CFLAGS = $(FFI_CFLAGS) $(GCC_CFLAGS) -pthread
+libwayland_util_la_LIBADD = $(FFI_LIBS) -lrt -lm
+if ENABLE_PMLOG
+libwayland_util_la_CFLAGS += $(PMLOG_CFLAGS)
+libwayland_util_la_LIBADD += $(PMLOG_LIBS)
+endif
 
 noinst_LTLIBRARIES = libwayland-util.la
 
@@ -74,6 +80,10 @@ nodist_include_HEADERS =			\
 
 libwayland_server_la_CFLAGS = $(FFI_CFLAGS) $(AM_CFLAGS) -pthread
 libwayland_server_la_LIBADD = $(FFI_LIBS) libwayland-private.la libwayland-util.la $(RT_LIBS) -lm
+if ENABLE_PMLOG
+libwayland_server_la_CFLAGS += $(PMLOG_CFLAGS)
+libwayland_server_la_LIBADD += $(PMLOG_LIBS)
+endif
 libwayland_server_la_LDFLAGS = -version-info 1:0:1
 libwayland_server_la_SOURCES =			\
 	src/wayland-server.c			\
@@ -86,6 +96,10 @@ nodist_libwayland_server_la_SOURCES =		\
 
 libwayland_client_la_CFLAGS = $(FFI_CFLAGS) $(AM_CFLAGS) -pthread
 libwayland_client_la_LIBADD = $(FFI_LIBS) libwayland-private.la libwayland-util.la $(RT_LIBS) -lm
+if ENABLE_PMLOG
+libwayland_client_la_CFLAGS += $(PMLOG_CFLAGS)
+libwayland_client_la_LIBADD += $(PMLOG_LIBS)
+endif
 libwayland_client_la_LDFLAGS = -version-info 3:0:3
 libwayland_client_la_SOURCES =			\
 	src/wayland-client.c
diff --git a/configure.ac b/configure.ac
index dda5e48..92e3bee 100644
--- a/configure.ac
+++ b/configure.ac
@@ -99,6 +99,13 @@ AM_CONDITIONAL(USE_HOST_SCANNER, test "x$with_host_scanner" = xyes)
 
 AM_CONDITIONAL(ENABLE_LIBRARIES, test "x$enable_libraries" = xyes)
 
+AC_ARG_ENABLE([pmlog],
+              [AC_HELP_STRING([--enable-pmlog],
+                              [Enable pmlog for stderr logging])],
+              [enable_pmlog=yes],
+              [])
+AM_CONDITIONAL(ENABLE_PMLOG, test "x$enable_pmlog" = xyes)
+
 AC_ARG_WITH(icondir, [  --with-icondir=<dir>    Look for cursor icons here],
 		     [  ICONDIR=$withval],
 		     [  ICONDIR=${datadir}/icons])
@@ -126,6 +133,11 @@ if test "x$enable_dtd_validation" = "xyes"; then
 	AC_CONFIG_LINKS([src/wayland.dtd.embed:protocol/wayland.dtd])
 fi
 
+if test "x$enable_pmlog" = "xyes"; then
+	PKG_CHECK_MODULES(PMLOG, [PmLogLib])
+	AC_DEFINE(HAVE_PMLOG, 1, [PmLogLib is available])
+fi
+
 AC_PATH_PROG(XSLTPROC, xsltproc)
 AM_CONDITIONAL([HAVE_XSLTPROC], [test "x$XSLTPROC" != "x"])
 
diff --git a/src/connection.c b/src/connection.c
index 52a83a7..0fc1c50 100644
--- a/src/connection.c
+++ b/src/connection.c
@@ -75,17 +75,13 @@ static FILE* open_file()
 	char proc_file[UNIX_PATH_MAX];
 	char filename[UNIX_PATH_MAX];
 	FILE *tmp_debug_fp = NULL;
+	extern char *program_invocation_short_name;
 
 	debug_path = getenv("WAYLAND_DEBUG_PATH");
-	sprintf(proc_file, "/proc/%d/comm",getpid());
-	FILE* f = fopen(proc_file,"r");
-	if (f) {
-		size_t size;
-		size = fread(proc_name, sizeof(char), UNIX_PATH_MAX, f);
-		if (size>0 && '\n'==proc_name[size-1])
-			proc_name[size-1]='\0';
-		fclose(f);
-	}
+	if (program_invocation_short_name)
+		snprintf(proc_name, UNIX_PATH_MAX, "%s_%d", program_invocation_short_name, getpid());
+	else
+		snprintf(proc_name, UNIX_PATH_MAX, "%d", getpid());
 
 	if (!debug_path)
 		snprintf(filename, UNIX_PATH_MAX, "/tmp/wayland_%s.log",proc_name);
@@ -1313,6 +1309,8 @@ wl_closure_print(struct wl_closure *closure, struct wl_object *target, int send)
 	static FILE *debug_fp = NULL;
 	struct timeval  nowTv;
 	struct tm       nowTm;
+	pid_t pid = getpid();
+	pthread_t tid = pthread_self();
 
 #ifdef NO_WEBOS_WAYLAND_DEBUG
 	clock_gettime(CLOCK_REALTIME, &tp);
@@ -1384,10 +1382,15 @@ wl_closure_print(struct wl_closure *closure, struct wl_object *target, int send)
 	}
 
 	get_time(&nowTv, &nowTm);
+	clock_gettime(CLOCK_MONOTONIC, &tp);
+	time = (tp.tv_sec * 1000000L) + (tp.tv_nsec / 1000);
 
-	fprintf(debug_fp,"%04d-%02d-%02dT%02d:%02d:%02d.%06ldZ  %s%s@%u.%s(",
+	fprintf(debug_fp,"[%04d-%02d-%02dT%02d:%02d:%02d.%06ldZ][%10.3f][pid:%d][tid:0x%x]  %s%s@%u.%s(",
 			1900 + nowTm.tm_year, 1 + nowTm.tm_mon, nowTm.tm_mday,
 			nowTm.tm_hour, nowTm.tm_min, nowTm.tm_sec, nowTv.tv_usec,
+			time / 1000.0,
+			pid,
+			tid,
 			send ? " -> " : "",
 			target->interface->name, target->id,
 			closure->message->name);
diff --git a/src/wayland-util.c b/src/wayland-util.c
index d5973bf..3cb23d8 100644
--- a/src/wayland-util.c
+++ b/src/wayland-util.c
@@ -30,8 +30,12 @@
 #include <string.h>
 #include <stdarg.h>
 
+#include "../config.h"
 #include "wayland-util.h"
 #include "wayland-private.h"
+#ifdef HAVE_PMLOG
+#include <PmLogLib.h>
+#endif
 
 WL_EXPORT void
 wl_list_init(struct wl_list *list)
@@ -390,6 +394,20 @@ wl_map_for_each(struct wl_map *map, wl_iterator_func_t func, void *data)
 static void
 wl_log_stderr_handler(const char *fmt, va_list arg)
 {
+#ifdef HAVE_PMLOG
+	static bool contextCreated = false;
+	static PmLogContext ctx;
+	char szMessage[4096] = {0, };
+
+	if (!contextCreated) {
+		PmLogGetContext("wayland", &ctx);
+		contextCreated = true;
+	}
+
+	vsnprintf(szMessage, sizeof(szMessage), fmt, arg);
+	PmLogError(ctx, "WAYLAND", 0, "[pid:%d][tid:0x%x] %s", getpid(), pthread_self(), szMessage);
+#endif
+
 	vfprintf(stderr, fmt, arg);
 }
 
