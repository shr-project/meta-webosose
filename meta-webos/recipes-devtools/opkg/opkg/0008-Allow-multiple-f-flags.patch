From 36d08b93d2859992b624a4ba2f412cfa5c766050 Mon Sep 17 00:00:00 2001
From: Jaeyoon Jung <jaeyoon.jung@lge.com>
Date: Thu, 24 Oct 2024 15:44:07 -0400
Subject: [PATCH] Read arguments for -f flags as much as given and load them
 all.

Signed-off-by: Jaeyoon Jung <jaeyoon.jung@lge.com>
Signed-off-by: Alex Stewart <alex.stewart@emerson.com>
---
Upstream-Status: Backport [https://git.yoctoproject.org/opkg/commit/?id=36d08b93d2859992b624a4ba2f412cfa5c766050]

 libopkg/opkg_conf.c              | 39 ++++++++++++++++++++------------
 libopkg/opkg_conf.h              |  3 ++-
 src/opkg.c                       |  5 ++--
 tests/Makefile                   |  1 +
 tests/misc/print_architecture.py | 25 ++++++++++++++++++++
 5 files changed, 56 insertions(+), 17 deletions(-)
 create mode 100644 tests/misc/print_architecture.py

diff --git a/libopkg/opkg_conf.c b/libopkg/opkg_conf.c
index 4dc777b..839d8f1 100644
--- a/libopkg/opkg_conf.c
+++ b/libopkg/opkg_conf.c
@@ -226,8 +226,13 @@ static void opkg_conf_free(void)
         }
     }
 
-    free(opkg_config->conf_file);
-    opkg_config->conf_file = NULL;
+    if (opkg_config->conf_file_count > 0) {
+        for (i = 0; i < opkg_config->conf_file_count; i++)
+            free(opkg_config->conf_files[i]);
+        free(opkg_config->conf_files);
+        opkg_config->conf_file_count = 0;
+        opkg_config->conf_files = NULL;
+    }
     free(opkg_config->dest_str);
     opkg_config->dest_str = NULL;
     free(opkg_config->fields_filter);
@@ -632,6 +637,9 @@ int opkg_conf_init(void)
     str_list_init(&opkg_config->exclude_list);
     str_list_init(&opkg_config->ignore_recommends_list);
 
+    opkg_config->conf_files = NULL;
+    opkg_config->conf_file_count = 0;
+
     return 0;
 }
 
@@ -731,17 +739,20 @@ int opkg_conf_read(void)
     if (!opkg_config->offline_root)
         opkg_config->offline_root = xstrdup(getenv("OFFLINE_ROOT"));
 
-    if (opkg_config->conf_file) {
-        struct stat st;
-        r = stat(opkg_config->conf_file, &st);
-        if (r == -1) {
-            opkg_perror(ERROR, "Couldn't stat %s", opkg_config->conf_file);
-            goto err;
+    if (opkg_config->conf_file_count > 0) {
+        opkg_msg(INFO, "Loading %d conf file(s).\n", opkg_config->conf_file_count);
+        for (i = 0; i < opkg_config->conf_file_count; i++) {
+            struct stat st;
+            r = stat(opkg_config->conf_files[i], &st);
+            if (r == -1) {
+                opkg_perror(ERROR, "Couldn't stat %s", opkg_config->conf_files[i]);
+                goto err;
+            }
+            r = opkg_conf_parse_file(opkg_config->conf_files[i],
+                    &opkg_config->pkg_src_list, &opkg_config->dist_src_list);
+            if (r != 0)
+                goto err;
         }
-        r = opkg_conf_parse_file(opkg_config->conf_file,
-                &opkg_config->pkg_src_list, &opkg_config->dist_src_list);
-        if (r != 0)
-            goto err;
     } else {
         const char *conf_file_dir = getenv("OPKG_CONF_DIR");
         if (conf_file_dir == NULL)
@@ -765,8 +776,8 @@ int opkg_conf_read(void)
         free(etc_opkg_conf_pattern);
 
         for (i = 0; i < globbuf.gl_pathc; i++) {
-            int mismatch = globbuf.gl_pathv[i] && opkg_config->conf_file
-                    && !strcmp(opkg_config->conf_file, globbuf.gl_pathv[i]);
+            int mismatch = globbuf.gl_pathv[i] && opkg_config->conf_file_count > 0
+                    && !strcmp(opkg_config->conf_files[0], globbuf.gl_pathv[i]);
             if (mismatch)
                 continue;
             r = opkg_conf_parse_file (globbuf.gl_pathv[i],
diff --git a/libopkg/opkg_conf.h b/libopkg/opkg_conf.h
index 3fa6ca9..eec4e81 100644
--- a/libopkg/opkg_conf.h
+++ b/libopkg/opkg_conf.h
@@ -69,7 +69,8 @@ typedef struct opkg_conf {
     pkg_dest_t *default_dest;
     char *dest_str;
 
-    char *conf_file;
+    char **conf_files;
+    size_t conf_file_count;
 
     char *tmp_dir;
     char *intercepts_dir; /* set to "/dev/null" to disable intercepts */
diff --git a/src/opkg.c b/src/opkg.c
index 6249fd9..bfb9986 100644
--- a/src/opkg.c
+++ b/src/opkg.c
@@ -162,7 +162,8 @@ static int args_parse_stage1(int argc, char *argv[])
 
         switch (c) {
         case 'f':
-            opkg_config->conf_file = xstrdup(optarg);
+            opkg_config->conf_files = realloc(opkg_config->conf_files, ++opkg_config->conf_file_count * sizeof(char*));
+            opkg_config->conf_files[opkg_config->conf_file_count - 1] = xstrdup(optarg);
             break;
         case 'o':
             opkg_config->offline_root = xstrdup(optarg);
@@ -396,7 +397,7 @@ static void usage()
     printf("\t                                  3 debug\n");
     printf("\t                                  4 debug level 2\n");
     printf("\t-f <conf_file>                  Use <conf_file> as the opkg configuration file\n");
-    printf("\t--conf <conf_file>\n");
+    printf("\t--conf <conf_file>              Can be given multiple times\n");
     printf("\t--cache-dir <path>              Specify cache directory.\n");
     printf("\t-t, --tmp-dir <directory>       Specify tmp-dir.\n");
     printf("\t-l, --lists-dir <directory>     Specify lists-dir.\n");
diff --git a/tests/Makefile b/tests/Makefile
index 8453939..15d58fb 100644
--- a/tests/Makefile
+++ b/tests/Makefile
@@ -103,6 +103,7 @@ REGRESSION_TESTS := core/01_install.py \
 		    misc/update_loses_autoinstalled_flag.py \
 		    misc/version_comparisons.py \
 		    security/cve_2020_7982.py \
+		    misc/print_architecture.py \
 # intentional blank line
 
 RUN_TESTS := $(REGRESSION_TESTS:%.py=run-%.py)
diff --git a/tests/misc/print_architecture.py b/tests/misc/print_architecture.py
new file mode 100644
index 0000000..d921885
--- /dev/null
+++ b/tests/misc/print_architecture.py
@@ -0,0 +1,25 @@
+#!/usr/bin/env python3
+# SPDX-License-Identifier: GPL-2.0-only
+
+import os
+import opk, cfg, opkgcl
+
+opk.regress_init()
+
+arch_line1 = 'arch all 1'
+arch_line2 = 'arch any 2'
+expected = arch_line1 + '\n' + arch_line2 + '\n'
+
+with open('test_arch1.conf', 'w') as f:
+    f.write(arch_line1)
+with open('test_arch2.conf', 'w') as f:
+    f.write(arch_line2)
+
+(status, output) = opkgcl.opkgcl('-f test_arch1.conf -f test_arch2.conf print_architecture')
+if status != 0:
+    opk.fail("with an error '{}'".format(output))
+elif output != expected:
+    opk.fail("output didn't match.\nexpected:\n{}\nactual:\n{}".format(expected, output))
+
+os.remove('test_arch1.conf')
+os.remove('test_arch2.conf')
